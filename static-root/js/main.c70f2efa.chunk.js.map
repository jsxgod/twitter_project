{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/tweet.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","TweetButton","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetID","id","apiTweetAction","UserDisplay","user","nameDisplay","fullNameFlag","first_name","last_name","Fragment","UserLink","children","UserPicture","ParentTweet","parent","Tweet","isRetweet","whoRetweeted","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidLoad","setTweetsDidLoad","useEffect","final","newTweets","concat","results","next","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","classname","onSubmit","tweetContent","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","tweetId","didLookup","setDidLookup","setTweet","handleBackendLookup","App","src","logo","alt","target","rel","Boolean","hostname","appElement","getElementById","ReactDOM","render","StrictMode","tweetsElement","createElement","dataset","feedElement","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c70f2efa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nexport function backendLookup(method, endpoint, callback, data){\r\n    let jsonData;\r\n    if (data){\r\n        jsonData = JSON.stringify(data);\r\n    }\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    const url = `http://localhost:8000/api${endpoint}`;\r\n    xhr.responseType = \"json\";\r\n\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.open(method, url);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    if (csrftoken){\r\n        //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n    }\r\n    xhr.onload = function() {\r\n        if (xhr.status === 403){\r\n            const detail = xhr.response.detail;\r\n            if (detail === \"Authentication credentials were not provided.\") {\r\n                if (window.location.href.indexOf(\"login\") === -1){\r\n                    window.location.href = \"/login?showLoginRequired=true\"\r\n                }\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status)\r\n    };\r\n    xhr.onerror = function(e) {\r\n        console.log(e);\r\n        callback({\"message\": \"Error request\"}, 400)\r\n    };\r\n    xhr.send(jsonData)\r\n}\r\n\r\n\r\nfunction getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create\", callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetID, action, callback){\r\n    backendLookup(\"POST\", \"/tweets/action\", callback, {id: tweetID, action: action})\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint = \"/tweets/feed\";\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined){\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = \"/tweets/\";\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined){\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetDetail(tweetID, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetID}`, callback)\r\n}","import React from \"react\";\r\nimport {apiTweetAction} from \"./lookup\";\r\n\r\nexport function TweetButton(props){\r\n    const {tweet, action, didPerformAction} = props;\r\n    const likes = tweet.likes ? tweet.likes : 0;\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm';\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n\r\n    const handleActionBackendEvent = (response, status)=> {\r\n        console.log(response, status);\r\n        if ((status === 200 || status === 201) && didPerformAction){\r\n            didPerformAction(response, status)\r\n        }\r\n    };\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n\r\n    };\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : action.display;\r\n\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n}","import React from \"react\";\r\n\r\nexport function UserDisplay(props){\r\n    const {user, fullNameFlag} = props;\r\n    const nameDisplay = fullNameFlag === true ? `${user.first_name} ${user.last_name} ` : null;\r\n\r\n    return <React.Fragment>\r\n            {nameDisplay}\r\n            <UserLink username={user.username}>@{user.username}</UserLink>\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserLink(props){\r\n    const {username} = props;\r\n    const handleUserLink = (event) => {\r\n        window.location.href = `/profile/${username}`\r\n    };\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n            {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserPicture (props) {\r\n    const {user} = props;\r\n    return <UserLink username={user.username}>\r\n        <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n        {user.username[0]}\r\n        </span>\r\n    </UserLink>\r\n}","import React, {useState} from \"react\";\r\nimport {TweetButton} from \"./buttons\";\r\n\r\nimport {UserDisplay, UserPicture} from \"../profiles\";\r\n\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props;\r\n    return tweet.parent ? <Tweet isRetweet whoRetweeted={props.whoRetweeted} hideActions className={' '} tweet={tweet.parent}/> : null\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions, isRetweet, whoRetweeted} = props;\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\r\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\r\n    className = isRetweet === true ? `${className} p-3 border rounded` : className;\r\n\r\n    const path = window.location.pathname;\r\n    const match = path.match(/(?<id>\\d+)/);\r\n    const urlTweetId = match ? match.groups.id : -1;\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n            setActionTweet(newActionTweet)\r\n        } else if (status === 201){\r\n            if (didRetweet) {\r\n                didRetweet(newActionTweet)\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLink = (event) => {\r\n        event.preventDefault();\r\n        window.location.href = `/${tweet.id}`;\r\n    };\r\n\r\n    return <div className={className}>\r\n            {isRetweet === true && <div className='mb-3'>\r\n                <span className='small text-muted'>Retweeted by <UserDisplay user={whoRetweeted}/></span>\r\n            </div>}\r\n        <div className='d-flex'>\r\n            <div className=''>\r\n                <UserPicture user={tweet.user}/>\r\n            </div>\r\n            <div className='col-11'>\r\n                <div>\r\n                    <p>\r\n                        <UserDisplay fullNameFlag user={tweet.user}/>\r\n                    </p>\r\n                    <p>{tweet.content}</p>\r\n                    <ParentTweet tweet={tweet} whoRetweeted={tweet.user}/>\r\n                </div>\r\n                <div className='btn btn-group px-0'>\r\n                  {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                    <TweetButton tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                    <TweetButton tweet={actionTweet} didPerformAction={handlePerformAction}  action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                    <TweetButton tweet={actionTweet} didPerformAction={handlePerformAction}  action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                  </React.Fragment>}\r\n                    {isDetail === true ? null : <button className='btn btn-sm btn-outline btn-primary' onClick={handleLink}>View</button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetList} from \"./lookup\";\r\nimport {Tweet} from \"./tweet\"\r\n\r\n\r\nexport function TweetsList(props){\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidLoad, setTweetsDidLoad] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n    }\r\n  },[props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidLoad === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n            if (status === 200) {\r\n                setTweetsInit(response.results);\r\n                setNextUrl(response.next);\r\n                setTweetsDidLoad(true);\r\n            }\r\n        };\r\n    apiTweetList(props.username, handleTweetListLookup)\r\n    }\r\n  }, [tweetsInit, tweetsDidLoad, setTweetsDidLoad, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit];\r\n      updateTweetsInit.unshift(newTweet);\r\n      setTweetsInit(updateTweetsInit);\r\n\r\n      const updateFinalTweets = [...tweets];\r\n      updateFinalTweets.unshift(tweets);\r\n      setTweets(updateFinalTweets)\r\n  };\r\n\r\n  const handleLoadNext = (event) => {\r\n      event.preventDefault();\r\n      if (nextUrl !== null) {\r\n          const handleLoadNextResponse = (response, status) => {\r\n              if (status === 200){\r\n                  setNextUrl(response.next);\r\n                  const newTweets = [...tweets].concat(response.results)\r\n                  setTweetsInit(newTweets);\r\n                  setTweets(newTweets);\r\n              }\r\n          };\r\n          apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n  };\r\n\r\n  return <React.Fragment>{tweets.map((item, index) =>{\r\n            return <Tweet tweet={item} didRetweet={handleDidRetweet} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n          })}\r\n      {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next Page</button>}\r\n      </React.Fragment>\r\n}\r\n","import React from \"react\";\r\nimport {apiTweetCreate} from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n    const textAreaRef = React.createRef();\r\n    const {didTweet} = props;\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const tweetContent = textAreaRef.current.value;\r\n        apiTweetCreate(tweetContent, handleBackendUpdate);\r\n        textAreaRef.current.value = '';\r\n    };\r\n\r\n    const handleBackendUpdate = (response, status)=>{\r\n        if (status === 201){\r\n            didTweet(response);\r\n        } else {\r\n            console.log(response);\r\n            alert(\"Error podczas tworzenia tweeta\")\r\n        }\r\n    };\r\n    return <div className={props.classname}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <textarea ref={textAreaRef} required={true} className='form-control'/>\r\n                    <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n                </form>\r\n    </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetFeed} from \"./lookup\";\r\nimport {Tweet} from \"./tweet\"\r\n\r\n\r\nexport function FeedList(props){\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidLoad, setTweetsDidLoad] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n    }\r\n  },[props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidLoad === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n            if (status === 200) {\r\n                setTweetsInit(response.results);\r\n                setNextUrl(response.next);\r\n                setTweetsDidLoad(true);\r\n            }\r\n        };\r\n    apiTweetFeed(handleTweetListLookup)\r\n    }\r\n  }, [tweetsInit, tweetsDidLoad, setTweetsDidLoad, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit];\r\n      updateTweetsInit.unshift(newTweet);\r\n      setTweetsInit(updateTweetsInit);\r\n\r\n      const updateFinalTweets = [...tweets];\r\n      updateFinalTweets.unshift(tweets);\r\n      setTweets(updateFinalTweets)\r\n  };\r\n\r\n  const handleLoadNext = (event) => {\r\n      event.preventDefault();\r\n      if (nextUrl !== null) {\r\n          const handleLoadNextResponse = (response, status) => {\r\n              if (status === 200){\r\n                  setNextUrl(response.next);\r\n                  const newTweets = [...tweets].concat(response.results)\r\n                  setTweetsInit(newTweets);\r\n                  setTweets(newTweets);\r\n              }\r\n          };\r\n          apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n  };\r\n\r\n  return <React.Fragment>{tweets.map((item, index) =>{\r\n            return <Tweet tweet={item} didRetweet={handleDidRetweet} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n          })}\r\n      {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next Page</button>}\r\n      </React.Fragment>\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport {TweetsList} from \"./list\";\r\nimport {TweetCreate} from \"./create\";\r\nimport {Tweet} from \"./tweet\";\r\nimport {FeedList} from \"./feed\";\r\n\r\nimport {apiTweetDetail} from \"./lookup\";\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n\r\n    const canTweet = props.canTweet !== \"false\";\r\n\r\n    const handleNewTweet = (newTweet)=>{\r\n        let tempNewTweets = [...newTweets];\r\n        tempNewTweets.unshift(newTweet);\r\n        setNewTweets(tempNewTweets);\r\n    };\r\n    return <div className={props.className}>\r\n        {canTweet && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function FeedComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n\r\n    const canTweet = props.canTweet !== \"false\";\r\n\r\n    const handleNewTweet = (newTweet)=>{\r\n        let tempNewTweets = [...newTweets];\r\n        tempNewTweets.unshift(newTweet);\r\n        setNewTweets(tempNewTweets);\r\n    };\r\n    return <div className={props.className}>\r\n        {canTweet && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n        <FeedList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n    const {tweetId} = props;\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [tweet, setTweet] = useState(null);\r\n\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200){\r\n            setTweet(response)\r\n        } else {\r\n            alert(\"Nie można znaleźć tweeta.\")\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if (didLookup === false){\r\n            apiTweetDetail(tweetId, handleBackendLookup);\r\n            setDidLookup(true)\r\n        }\r\n        }, [tweetId, didLookup, setDidLookup]\r\n    );\r\n\r\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {TweetsComponent, FeedComponent, TweetDetailComponent} from \"./tweets\";\r\n\r\nconst appElement = document.getElementById('root');\r\n\r\nif (appElement) {\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>,\r\n        appElement\r\n    );\r\n}\r\n\r\nconst tweetsElement = document.getElementById(\"tweets\");\r\nif (tweetsElement) {\r\n    ReactDOM.render(React.createElement(TweetsComponent, tweetsElement.dataset), tweetsElement)\r\n}\r\n\r\nconst feedElement = document.getElementById(\"tweets-feed\");\r\nif (feedElement) {\r\n    ReactDOM.render(React.createElement(FeedComponent, feedElement.dataset), feedElement)\r\n}\r\n\r\nconst tweetDetailElements = document.querySelectorAll(\".tweets-detail\");\r\ntweetDetailElements.forEach(container=> {\r\n    ReactDOM.render(\r\n        React.createElement(TweetDetailComponent, container.dataset),\r\n        container\r\n    );\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}