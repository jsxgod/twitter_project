{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/tweet.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","console","log","send","TweetButton","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetID","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","isDetail","handlePerformAction","newActionTweet","content","Fragment","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidLoad","setTweetsDidLoad","useEffect","final","newTweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","classname","onSubmit","tweetContent","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","tweetId","didLookup","setDidLookup","setTweet","handleBackendLookup","App","src","logo","alt","target","rel","Boolean","hostname","appElement","getElementById","ReactDOM","render","StrictMode","tweetsElement","dataset","createElement","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b4b9f71c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nexport function backendLookup(method, endpoint, callback, data){\r\n    let jsonData;\r\n    if (data){\r\n        jsonData = JSON.stringify(data);\r\n    }\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    const url = `http://localhost:8000/api${endpoint}`;\r\n    xhr.responseType = \"json\";\r\n\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.open(method, url);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    if (csrftoken){\r\n        //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n    }\r\n    xhr.onload = function() {\r\n        if (xhr.status === 403){\r\n            const detail = xhr.response.detail;\r\n            if (detail === \"Authentication credentials were not provided.\") {\r\n                window.location.href = \"/login?showLoginRequired=true\"\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status)\r\n    };\r\n    xhr.onerror = function(e) {\r\n        console.log(e);\r\n        callback({\"message\": \"Error request\"}, 400)\r\n    };\r\n    xhr.send(jsonData)\r\n}\r\n\r\n\r\nfunction getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}","import React from \"react\";\r\nimport {apiTweetAction} from \"./lookup\";\r\n\r\nexport function TweetButton(props){\r\n    const {tweet, action, didPerformAction} = props;\r\n    const likes = tweet.likes ? tweet.likes : 0;\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm';\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n\r\n    const handleActionBackendEvent = (response, status)=> {\r\n        console.log(response, status);\r\n        if ((status === 200 || status === 201) && didPerformAction){\r\n            didPerformAction(response, status)\r\n        }\r\n    };\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n\r\n    };\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : action.display;\r\n\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n}","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create\", callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetID, action, callback){\r\n    backendLookup(\"POST\", \"/tweets/action\", callback, {id: tweetID, action: action})\r\n}\r\n\r\nexport function apiTweetList(username, callback) {\r\n    let endpoint = \"/tweets/\";\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetDetail(tweetID, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetID}`, callback)\r\n}","import React, {useState} from \"react\";\r\nimport {TweetButton} from \"./buttons\";\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props;\r\n    return tweet.parent ? <div className='row'>\r\n        <div className='col-11 mx-auto p-3 border rounded'>\r\n            <p className='mb-0 text-muted small'>Retweet</p>\r\n            <Tweet hideActions className={' '} tweet={tweet.parent}/>\r\n        </div>\r\n    </div> : null\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions} = props;\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\r\n\r\n\r\n    const path = window.location.pathname;\r\n    const match = path.match(/(?<id>\\d+)/);\r\n    const urlTweetId = match ? match.groups.id : -1;\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n            setActionTweet(newActionTweet)\r\n        } else if (status === 201){\r\n            if (didRetweet) {\r\n                didRetweet(newActionTweet)\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLink = (event) => {\r\n        event.preventDefault();\r\n        window.location.href = `/${tweet.id}`;\r\n    };\r\n\r\n    return <div className={className}>\r\n        <div>\r\n            <p>{tweet.id} - {tweet.content}</p>\r\n            <ParentTweet tweet={tweet}/>\r\n        </div>\r\n        <div className='btn btn-group'>\r\n          {(actionTweet && hideActions !== true) && <React.Fragment>\r\n            <TweetButton tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n            <TweetButton tweet={actionTweet} didPerformAction={handlePerformAction}  action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n            <TweetButton tweet={actionTweet} didPerformAction={handlePerformAction}  action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n          </React.Fragment>}\r\n            {isDetail === true ? null : <button className='btn btn-sm btn-outline btn-primary' onClick={handleLink}>View</button>}\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetList} from \"./lookup\";\r\nimport {Tweet} from \"./tweet\"\r\n\r\n\r\nexport function TweetsList(props){\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [tweetsDidLoad, setTweetsDidLoad] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n    }\r\n  },[props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidLoad === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n            if (status === 200) {\r\n                setTweetsInit(response);\r\n                setTweetsDidLoad(true);\r\n            }\r\n        };\r\n    apiTweetList(props.username, handleTweetListLookup)\r\n    }\r\n  }, [tweetsInit, tweetsDidLoad, setTweetsDidLoad, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit];\r\n      updateTweetsInit.unshift(newTweet);\r\n      setTweetsInit(updateTweetsInit);\r\n\r\n      const updateFinalTweets = [...tweets];\r\n      updateFinalTweets.unshift(tweets);\r\n      setTweets(updateFinalTweets)\r\n  };\r\n  return tweets.map((item, index) =>{\r\n            return <Tweet tweet={item} didRetweet={handleDidRetweet} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n          })\r\n}\r\n","import React from \"react\";\r\nimport {apiTweetCreate} from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n    const textAreaRef = React.createRef();\r\n    const {didTweet} = props;\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const tweetContent = textAreaRef.current.value;\r\n        apiTweetCreate(tweetContent, handleBackendUpdate);\r\n        textAreaRef.current.value = '';\r\n    };\r\n\r\n    const handleBackendUpdate = (response, status)=>{\r\n        if (status === 201){\r\n            didTweet(response);\r\n        } else {\r\n            console.log(response);\r\n            alert(\"Error podczas tworzenia tweeta\")\r\n        }\r\n    };\r\n    return <div className={props.classname}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <textarea ref={textAreaRef} required={true} className='form-control'/>\r\n                    <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n                </form>\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react'\r\n\r\nimport {TweetsList} from \"./list\";\r\nimport {TweetCreate} from \"./create\";\r\nimport {Tweet} from \"./tweet\";\r\n\r\nimport {apiTweetDetail} from \"./lookup\";\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n\r\n    const canTweet = props.canTweet !== \"false\";\r\n\r\n    const handleNewTweet = (newTweet)=>{\r\n        let tempNewTweets = [...newTweets];\r\n        tempNewTweets.unshift(newTweet);\r\n        setNewTweets(tempNewTweets);\r\n    };\r\n    return <div className={props.className}>\r\n        {canTweet && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n    const {tweetId} = props;\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [tweet, setTweet] = useState(null);\r\n\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200){\r\n            setTweet(response)\r\n        } else {\r\n            alert(\"Nie można znaleźć tweeta.\")\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if (didLookup === false){\r\n            apiTweetDetail(tweetId, handleBackendLookup);\r\n            setDidLookup(true)\r\n        }\r\n        }, [tweetId, didLookup, setDidLookup]\r\n    );\r\n\r\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {TweetsComponent, TweetDetailComponent} from \"./tweets\";\n\nconst appElement = document.getElementById('root');\n\nif (appElement) {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n        appElement\n    );\n}\n\nconst tweetsElement = document.getElementById(\"tweets\");\nif (tweetsElement) {\n    console.log(tweetsElement.dataset);\n    ReactDOM.render(React.createElement(TweetsComponent, tweetsElement.dataset), tweetsElement)\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweets-detail\");\ntweetDetailElements.forEach(container=> {\n    ReactDOM.render(\n        React.createElement(TweetDetailComponent, container.dataset),\n        container\n    );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}